#!/usr/bin/php
<?php
include_once 'miners-settlement-init.php';

include_once 'common/debug.class.php';
include_once 'local/simulator.class.php';
include_once 'local/battle.class.php';
include_once 'local/entity.class.php';
include_once 'local/item.class.php';
include_once 'local/rune.class.php';

$debug     = new Debug(9,DEBUG_CLI);
$item      = new Item($debug);
$item1     = new Item($debug);
$item2     = new Item($debug);
$attacker  = new Entity($debug);
$defender  = new Entity($debug);
$battle    = new Battle($debug);
$constants = new Constants($debug);
$simulator = new Simulator($debug);

$opts = getopt(null,array('verbose','debug:','type:','attacker:','defender:','iterations:'));

$debugLevel    = $opts['debug'] ?: 0;
$verbose       = (isset($opts['verbose'])) ? true : false;
$simulateType  = $opts['type'] ?: 'pve';
$attackerBuild = $opts['attacker'] ?: null;
$defenderBuild = $opts['defender'] ?: null;
$uIterations   = $opts['iterations'] ?: 100;

$simulateType = strtolower($simulateType);

if (1) {
   $setup01a = array(
      'type' => 'pve',
      'iterations' => $uIterations,
      'attacker' => array(
         'id' => 'sunflower-sotg-dragon',
         'tests' => array(
            'weaponA' => array(
               'gear'  => array(
                  'spear-of-the-gods' => array(
                     'values'  => array('health' => 278, 'attack' => 100, 'defense' => 67, 'speed' => 1.07, 'earth.damage' => 206, 'lightning.resist' => 51),
                     'options' => array('enhance'  => 7),
                  ),
               ),
            ),
            'weaponB' => array(
               'gear'  => array(
                  'spear-of-the-gods' => array(
                     'values' => array('health' => 539, 'attack' => 288, 'defense' => 86, 'speed' => 0.8, 'earth.damage' => 231, 'lightning.resist' => 143),
                     'options' => array('level'  => 7),
                  ),
               ),
            ),
         ),
      ),
      'defender' => array(
         'id'   => 'wind-dragon-83',
         'gear' => array(),
      ),
   );

   if (preg_match('/^(pve|pvp)$/i',$simulateType) && $attackerBuild && $defenderBuild) { 
      $setup = array(
         'type'       => $simulateType,
         'attacker'   => array('id' => $attackerBuild),
         'defender'   => array('id' => $defenderBuild),
         'iterations' => $uIterations,
      );
   }
   else if ($simulateType == 'test-builds' && $attackerBuild && $defenderBuild) {
      $buildList = array();
      foreach (explode(',',$attackerBuild) as $build) { $buildList[$build]['id'] = $build; }

      $setup = array(
         'type'       => 'pve',
         'attacker'   => array('tests' => $buildList),
         'defender'   => array('id' => $defenderBuild),
         'iterations' => $uIterations,
      );
   }
   else { $setup = $setup01a; }

   $debug->level($debugLevel);


   $tests = array();

   $baseConfig = array(
      'attacker'   => array('id' => $setup['attacker']['id'], 'gear' => $setup['attacker']['gear']),
      'defender'   => array('id' => $setup['defender']['id'], 'gear' => $setup['defender']['gear']),
      'type'       => $setup['type'],
      'iterations' => $setup['iterations'],
   );
   $testList = ($setup['attacker']['tests']) ? array_keys($setup['attacker']['tests']) : array($setup['type']);

   foreach ($testList as $testName) {
      $testConfig = $baseConfig;
      $overrides  = $setup['attacker']['tests'][$testName];
 
      if ($overrides['id'])   { $testConfig['attacker']['id'] = $overrides['id']; }
      if ($overrides['gear']) { $testConfig['attacker']['gear'] = $overrides['gear']; }

      $testConfig['label'] = $testName;

      $tests[$testName] = $testConfig;
   }

   foreach ($tests as $testName => $testInfo) {
      //print "\nStarting test $testName ".json_encode($testInfo)."\n\n";

      $results = $simulator->start($testInfo);

      if ($verbose) { print json_encode($results,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)."\n"; }

      print $simulator->formatResults($results,$testName)."\n\n\n";
   }
}

if (0) {

   $itemData = json_decode('{"data": { "health": 632, "attack": 151, "defense": 74, "speed": 0.82, "earth.damage": 420, "lightning.resist": 90 }, "options": { "level": 7 }}',true);

   $itemValues  = $itemData['data'];
   $itemOptions = $itemData['options'];

   $item->load('spear-of-the-gods');
   $item->generate($itemValues,$itemOptions);
   print $item->display();
   print "\n\n";
   $item->enhance(1);
   print $item->display();
   print "\n\n";
   $item->enhance(5);
   print $item->display();
   print "\n\n";
   $item->enhance(7);
   print $item->display();
   print "\n\n";
   $item->enhance(10);
   print $item->display();
   print "\n\n";
}

if (0) {
   $attacker->load('player-blank');
   $defender->load('raghor');

}

if (0) {
   $attacker->load('player-ng-peace');
   $defender->load('raghor');

   $outcome = $battle->start($attacker,$defender);

   print json_encode($outcome,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)."\n";
}

if (0) {
   $attacker->load('player-sotg-03');
   //$attacker->load('player-sotg-02');
   $defender->load('wind-dragon-38');

   $outcome = $battle->start($attacker,$defender);

   print json_encode($outcome,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)."\n";
}

if (0) {
   $attacker->load('player');
   $defender->load('troll');

   $outcome = $battle->start($attacker,$defender);

   print json_encode($outcome,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)."\n";
}

if (0) {
   $item->load('thousand-soul');
   $item->attachRune('one-shot-one-kill');

   $item->generate();

   print $item->export()."\n";
}

?>
