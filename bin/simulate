#!/usr/bin/php
<?php
include_once 'miners-settlement-init.php';

include_once 'common/debug.class.php';
include_once 'local/simulator.class.php';
include_once 'local/battle.class.php';
include_once 'local/entity.class.php';
include_once 'local/item.class.php';
include_once 'local/rune.class.php';

$debug     = new Debug(9,DEBUG_CLI);
$item      = new Item($debug);
$item1     = new Item($debug);
$item2     = new Item($debug);
$attacker  = new Entity($debug);
$defender  = new Entity($debug);
$battle    = new Battle($debug);
$constants = new Constants($debug);
$simulator = new Simulator($debug);

$opts = getopt(null,array('verbose','short','debug:','type:','attacker:','aname:','defender:','iterations:','godroll','enhance:','adjust:','equip:','runes:'));

$debugLevel    = $opts['debug'] ?: 0;
$verbose       = (isset($opts['verbose'])) ? true : false;
$shortResults  = (isset($opts['short'])) ? true : false;
$simulateType  = $opts['type'] ?: 'pve';
$attackerBuild = $opts['attacker'] ?: null;
$attackerName  = $opts['aname'] ?: null;
$defenderBuild = $opts['defender'] ?: null;
$uIterations   = $opts['iterations'] ?: 100;
$uGodroll      = (isset($opts['godroll'])) ? true : false;
$uAdjust       = $opts['adjust'] ?: null;
$uEnhance      = $opts['enhance'] ?: null;
$uEquip        = $opts['equip'] ?: null;
$uRunes        = $opts['runes'] ?: null;

$simulateType = strtolower($simulateType);


if (preg_match('/^(pve|pvp)$/i',$simulateType) && $attackerBuild && $defenderBuild) { 
   $setup = array(
      'type'       => $simulateType,
      'attacker'   => array('id' => $attackerBuild),
      'defender'   => array('id' => $defenderBuild),
      'iterations' => $uIterations,
      'godroll'    => $uGodroll,
      'enhance'    => $uEnhance,
      'adjust'     => $uAdjust,
      'equip'      => $uEquip,
      'runes'      => $uRunes,
      'aname'      => $attackerName,
   );
}

$debug->level($debugLevel);

$tests = array();

$baseConfig = array(
   'attacker'   => array('id' => $setup['attacker']['id']),
   'defender'   => array('id' => $setup['defender']['id']),
   'type'       => $setup['type'],
   'iterations' => $setup['iterations'],
   'godroll'    => $setup['godroll'],
   'enhance'    => $setup['enhance'],
   'adjust'     => $setup['adjust'],
   'equip'      => $setup['equip'],
   'runes'      => $setup['runes'],
   'aname'      => $setup['aname'],
);

$testList = ($setup['attacker']['tests']) ? array_keys($setup['attacker']['tests']) : array($setup['type']);

foreach ($testList as $testName) {
   $testConfig = $baseConfig;

   $testConfig['label'] = $testName;

   $tests[$testName] = $testConfig;
}

foreach ($tests as $testName => $testInfo) {
   //print "\nStarting test $testName ".json_encode($testInfo)."\n\n";

   $results = $simulator->start($testInfo);

   if ($verbose) { print json_encode($results,JSON_UNESCAPED_SLASHES|JSON_PRETTY_PRINT)."\n"; }

   print $simulator->formatResults($results,array('short' => $shortResults, 'name' => $testName))."\n\n\n";
}

?>
